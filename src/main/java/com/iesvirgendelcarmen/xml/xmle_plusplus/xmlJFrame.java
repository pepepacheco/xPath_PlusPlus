/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.iesvirgendelcarmen.xml.xmle_plusplus;

import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.xpath.XPathExpressionException;
import net.sf.saxon.s9api.SaxonApiException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.xml.sax.SAXException;
// import xmleditorkit.*;

/**
 *
 * @author juangu
 */
public class xmlJFrame extends javax.swing.JFrame {
    
    /**
     * Creates new form xmlJFrame
     */
    public xmlJFrame() {
        initComponents();
        this.selectedFile=null;
        this.selectedFilePath=null;
        // preparamos el filechooser
        FileFilter filter = new FileNameExtensionFilter("XML file", new String[] {"xml", "xhtml"});
        jFileChooserOpen.addChoosableFileFilter(filter);
        jFileChooserOpen.setFileFilter(filter);
        // preparamos el jTree
        jTreeXML.setModel(null);
        jTextAreaAbout.setText(GNULicense.license);
        // agrupamos los radio de selección del parser
        buttonGroupParser = new ButtonGroup();
        buttonGroupParser.add(jRadioButtonMenuItemSaxon9);
        buttonGroupParser.add(jRadioButtonMenuItemXBeans);
        buttonGroupParser.add(jRadioButtonMenuItemXalan);
        buttonGroupParser.setSelected(jRadioButtonMenuItemSaxon9.getModel(), true);
        // asignamos tecla abreviada para los menús principales
        jMenuFile.setMnemonic(KeyEvent.VK_F);
        jMenuHelp.setMnemonic(KeyEvent.VK_H);
        
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooserOpen = new javax.swing.JFileChooser();
        jDialogAbout = new javax.swing.JDialog();
        jButtonAboutClose = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaAbout = new javax.swing.JTextArea();
        jScrollPaneJTree = new javax.swing.JScrollPane();
        jTreeXML = new javax.swing.JTree();
        jTextFieldXPath = new javax.swing.JTextField();
        jLabelXPath = new javax.swing.JLabel();
        jButtonRunXPath = new javax.swing.JButton();
        jScrollPaneTextAreaXpath = new javax.swing.JScrollPane();
        jTextAreaXPathEval = new javax.swing.JTextArea();
        jButtonClean = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPaneXML = new javax.swing.JEditorPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuOpen = new javax.swing.JMenuItem();
        jMenuExit = new javax.swing.JMenuItem();
        jMenuEdit = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuTools = new javax.swing.JMenu();
        jRadioButtonMenuItemXalan = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemXBeans = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemSaxon9 = new javax.swing.JRadioButtonMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuItemHelp = new javax.swing.JMenuItem();
        jMenuItemAbout = new javax.swing.JMenuItem();

        jDialogAbout.setMinimumSize(new java.awt.Dimension(480, 480));

        jButtonAboutClose.setText("Close");
        jButtonAboutClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAboutCloseActionPerformed(evt);
            }
        });

        jTextAreaAbout.setColumns(20);
        jTextAreaAbout.setRows(5);
        jScrollPane1.setViewportView(jTextAreaAbout);

        javax.swing.GroupLayout jDialogAboutLayout = new javax.swing.GroupLayout(jDialogAbout.getContentPane());
        jDialogAbout.getContentPane().setLayout(jDialogAboutLayout);
        jDialogAboutLayout.setHorizontalGroup(
            jDialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogAboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(jDialogAboutLayout.createSequentialGroup()
                .addGap(189, 189, 189)
                .addComponent(jButtonAboutClose)
                .addContainerGap(195, Short.MAX_VALUE))
        );
        jDialogAboutLayout.setVerticalGroup(
            jDialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogAboutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAboutClose)
                .addGap(6, 6, 6))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("xmlXpath");
        setMaximumSize(new java.awt.Dimension(1280, 1024));
        setMinimumSize(new java.awt.Dimension(640, 480));
        setPreferredSize(new java.awt.Dimension(1016, 705));

        jScrollPaneJTree.setViewportView(jTreeXML);

        jLabelXPath.setText("XPath ");

        jButtonRunXPath.setText("run!");
        jButtonRunXPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRunXPathActionPerformed(evt);
            }
        });

        jTextAreaXPathEval.setEditable(false);
        jTextAreaXPathEval.setColumns(20);
        jTextAreaXPathEval.setLineWrap(true);
        jTextAreaXPathEval.setRows(5);
        jScrollPaneTextAreaXpath.setViewportView(jTextAreaXPathEval);

        jButtonClean.setText("clean");
        jButtonClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCleanActionPerformed(evt);
            }
        });

        jScrollPane2.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jScrollPane2.setViewportView(jEditorPaneXML);

        jMenuFile.setText("File");

        jMenuOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuOpen.setText("Open");
        jMenuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuOpenActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuOpen);

        jMenuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuExit.setText("Exit");
        jMenuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuExit);

        jMenuBar1.add(jMenuFile);

        jMenuEdit.setText("Edit");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Copy text");
        jMenuEdit.add(jMenuItem1);

        jMenuBar1.add(jMenuEdit);

        jMenuTools.setText("Tools");

        jRadioButtonMenuItemXalan.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jRadioButtonMenuItemXalan.setSelected(true);
        jRadioButtonMenuItemXalan.setText("Use Xalan Parser");
        jRadioButtonMenuItemXalan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemXalanActionPerformed(evt);
            }
        });
        jMenuTools.add(jRadioButtonMenuItemXalan);

        jRadioButtonMenuItemXBeans.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jRadioButtonMenuItemXBeans.setSelected(true);
        jRadioButtonMenuItemXBeans.setText("Use XBeans Parser");
        jMenuTools.add(jRadioButtonMenuItemXBeans);

        jRadioButtonMenuItemSaxon9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_9, java.awt.event.InputEvent.CTRL_MASK));
        jRadioButtonMenuItemSaxon9.setSelected(true);
        jRadioButtonMenuItemSaxon9.setText("Use Saxon9 Parser");
        jMenuTools.add(jRadioButtonMenuItemSaxon9);

        jMenuBar1.add(jMenuTools);

        jMenuHelp.setText("Help");

        jMenuItemHelp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItemHelp.setText("Help Content");
        jMenuItemHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemHelpActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuItemHelp);

        jMenuItemAbout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        jMenuItemAbout.setText("About this APP");
        jMenuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAboutActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuItemAbout);

        jMenuBar1.add(jMenuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneJTree, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelXPath, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonClean)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRunXPath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldXPath, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE))
                    .addComponent(jScrollPaneTextAreaXpath)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldXPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelXPath)
                            .addComponent(jButtonRunXPath)
                            .addComponent(jButtonClean))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPaneTextAreaXpath, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                    .addComponent(jScrollPaneJTree))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRunXPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRunXPathActionPerformed
        runQuery();
    }//GEN-LAST:event_jButtonRunXPathActionPerformed

    private void runQuery(){
        try {
            // TODO add your handling code here:
            String resultado = XPathUtil.runS9Xpath(
                    selectedFilePath,
                    jTextFieldXPath.getText());
            /* String resultado = XPathUtil.runXalanXpath(
                    selectedFilePath,
                    jTextFieldXPath.getText());*/
            jTextAreaXPathEval.setText(resultado);
        } catch (SaxonApiException ex ) {
            // Logger.getLogger(xmlJFrame.class.getName()).log(Level.SEVERE, null, ex);
            //jDialogAvisos.setVisible(true);
            javax.swing.JOptionPane.showMessageDialog(
                           jTextFieldXPath.getParent(), 
                           "ERROR XPATH:\n ." + 
                                   ex.getMessage());
        } /*catch (XPathExpressionException ex) {
            Logger.getLogger(xmlJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }
    
    private void jMenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuExitActionPerformed
     
        this.dispose();
    }//GEN-LAST:event_jMenuExitActionPerformed

    private void jTreeLoadXML(Node node, DefaultMutableTreeNode dmtn){
        // TODO
    }
    
    private void jMenuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuOpenActionPerformed
        // TODO add your handling code here:
        
        int returnVal = jFileChooserOpen.showOpenDialog(jFileChooserOpen.getParent());

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                selectedFile = jFileChooserOpen.getSelectedFile();
                selectedFilePath = selectedFile.getAbsolutePath();
                
                Document doc = DomUtil.parse(selectedFilePath, false);
                Element root = doc.getDocumentElement();
                DefaultMutableTreeNode rootNode = XPathUtil.buildTree(root);
                jTreeXML.removeAll();
                DefaultTreeModel treeModel = new DefaultTreeModel( rootNode );
		jTreeXML.setModel(treeModel);
               //  jTree1 = new javax.swing.JTree(rootNode);
                // DefaultMutableTreeNode result = new DefaultMutableTreeNode build(e.getNodeName());
                /* for(Object o : e.getChildNodes()) {
                Element child = (Element) o;
                result.add(build(child));
                }*/
//                jEditorPaneXML.setEditorKit(new XMLEditorKit());
                jEditorPaneXML.read(new BufferedReader(new FileReader(selectedFile)), selectedFile);
                
                System.out.println("Opening: " + selectedFile.getAbsolutePath()+ ".");
                // System.out.println("Opening: " + selectedFile.getAbsoluteFile()+ ".");
                // getAbsoluteFile devuelve un file y no un string
            } catch (ParserConfigurationException ex) {
                // Logger.getLogger(xmlJFrame.class.getName()).log(Level.SEVERE, null, ex);
                javax.swing.JOptionPane.showMessageDialog(
                           jFileChooserOpen.getParent(), 
                           "ERROR configuración parser:\n ." + 
                                   ex.getLocalizedMessage());
            } catch (IOException ex) {
                // Logger.getLogger(xmlJFrame.class.getName()).log(Level.SEVERE, null, ex);
                javax.swing.JOptionPane.showMessageDialog(
                           jFileChooserOpen.getParent(), 
                           "ERROR configuración parser:\n ." + 
                                   ex.getLocalizedMessage());
            } catch (SAXException ex) {
                // Logger.getLogger(xmlJFrame.class.getName()).log(Level.SEVERE, null, ex);
                javax.swing.JOptionPane.showMessageDialog(
                           jFileChooserOpen.getParent(), 
                           "ERROR configuración parser:\n ." + 
                                   ex.getLocalizedMessage());
            }
        } else {
            // System.out.println("Open command cancelled by user.");
        }
       
    }//GEN-LAST:event_jMenuOpenActionPerformed

    private void jRadioButtonMenuItemXalanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemXalanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonMenuItemXalanActionPerformed

    private void jMenuItemHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemHelpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemHelpActionPerformed

    private void jButtonCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCleanActionPerformed
        // TODO add your handling code here:
        jTextFieldXPath.setText("");
    }//GEN-LAST:event_jButtonCleanActionPerformed

    private void jMenuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAboutActionPerformed
        // TODO add your handling code here:
        jDialogAbout.setVisible(true);
    }//GEN-LAST:event_jMenuItemAboutActionPerformed

    private void jButtonAboutCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAboutCloseActionPerformed
        // TODO add your handling code here:
        jDialogAbout.setVisible(false);
    }//GEN-LAST:event_jButtonAboutCloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(xmlJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(xmlJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(xmlJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(xmlJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new xmlJFrame().setVisible(true);
            }
        });
    }

    private String selectedFilePath;
    private File selectedFile;
    private ButtonGroup buttonGroupParser;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAboutClose;
    private javax.swing.JButton jButtonClean;
    private javax.swing.JButton jButtonRunXPath;
    private javax.swing.JDialog jDialogAbout;
    private javax.swing.JEditorPane jEditorPaneXML;
    private javax.swing.JFileChooser jFileChooserOpen;
    private javax.swing.JLabel jLabelXPath;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuEdit;
    private javax.swing.JMenuItem jMenuExit;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemHelp;
    private javax.swing.JMenuItem jMenuOpen;
    private javax.swing.JMenu jMenuTools;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemSaxon9;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemXBeans;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemXalan;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPaneJTree;
    private javax.swing.JScrollPane jScrollPaneTextAreaXpath;
    private javax.swing.JTextArea jTextAreaAbout;
    private javax.swing.JTextArea jTextAreaXPathEval;
    private javax.swing.JTextField jTextFieldXPath;
    private javax.swing.JTree jTreeXML;
    // End of variables declaration//GEN-END:variables
}
